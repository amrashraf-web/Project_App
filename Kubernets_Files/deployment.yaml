# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: flask-app-deployment
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: flask-app
#   template:
#     metadata:
#       labels:
#         app: flask-app
#     spec:
#       containers:
#         - name: flask-app
#           image: <ECR_REPO_IMAGE> # Replace <<ECR_REPO_IMAGE>> with the actual repo with tag name
#           ports:
#             - containerPort: 5002
#           livenessProbe:
#             httpGet:
#               path: /healthz
#               port: 5002
#             initialDelaySeconds: 30
#             periodSeconds: 10
#           readinessProbe:
#             httpGet:
#               path: /ready
#               port: 5002
#             initialDelaySeconds: 5
#             periodSeconds: 5
#           env:
#             - name: DB_HOST
#               valueFrom:
#                 configMapKeyRef:
#                   name: mysql-configmap
#                   key: DATABASE_HOST
#             - name: DB_PORT
#               value: "3306"
#             - name: DB_NAME
#               valueFrom:
#                 secretKeyRef:
#                   name: mysql-secret
#                   key: MYSQL_DATABASE
#             - name: DB_USER
#               valueFrom:
#                 configMapKeyRef:
#                   name: mysql-configmap
#                   key: MYSQL_USER
#             - name: DB_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: mysql-secret
#                   key: MYSQL_PASSWORD

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: <ECR_REPO_IMAGE>
          ports:
            - containerPort: 5002
          # ... other configurations ...
          volumeMounts:
            - name: sql-volume
              mountPath: /app/sql-files  # Adjust the path according to your app's requirements
      volumes:
        - name: sql-volume
          configMap:
            name: sql-configmap  # Use the name of your ConfigMap here
